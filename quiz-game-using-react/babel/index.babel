class Question extends React.Component{
  
     render(){
       return (this.props.count!=8 ) ? 
               (<h1 style= {{color:'navy'}}> <h1 style={{color:'purple'}}>QUIZ</h1>What is {this.props.name}</h1>) : 
               (<h1>Thank you</h1>) 
               
           }
  }
    

class Options extends React.Component{
  render(){
    return (this.props.count!=8)?
      
      
      (<div><button  style= {{ padding:'10px 120px'}}  onClick={()=>{this.props.clickHandler(this.props.count,this.props.id)}}>{this.props.name}
     </button></div>):
    (<h1></h1>)
  }
}

function Restart(props){
  return <button  className = "btn-primary" style= {{backgroundColor:'orange', padding:'10px 120px',fontSize:'20px'}} onClick={props.restart}>{props.name}</button>
}

class Result extends React.Component{
 
  render(){
    return (
      <div>
        
        <h4 style= {{backgroundColor:'aliceblue'}}>{this.props.name}:{this.props.value}</h4>
      </div>
      )
  }
}


class App extends React.Component{
  constructor(props){
    super(props)
      this.state= {
                  ques:["4-2", "2+2", "4+5","California","6%2","Carrot","10+10","1+1","Apple"],
                  ops:[["77", "2","55","66"],["55", "00","11","4"],["48", "33","9","66"], 
                       ["city", "state","street","district"],["64", "0","11","55"],["Veg", "thing","name","fruit"],
                       ["1", "3","20","6"],["2", "3","34","78"],["Veg", "thing","fruit","name"]],
                  correct:0,
                  incorrect:0,
                  count:0,
                  ans:["1","3","2","2","1","0","2","0","2"],
                 
                  
                  
                  }
    this.clickHandler=this.clickHandler.bind(this)
     this.restartHandler=this.restartHandler.bind(this)
       }
  
  restartHandler(){
    this.setState({correct:0,incorrect:0,count:0})
  }
  
  clickHandler(count,id){
     
   
     if(id==this.state.ans[this.state.count]){
       this.setState((prevState,props)=>{
        return {correct:prevState.correct+1}
       })
     }
    else{
      this.setState((prevState,props)=>{
        return {incorrect:prevState.incorrect+1}
       })
    }
       
        this.setState((prevState,props)=>{
        return {count:prevState.count+1}
      }) 
    
    this.setState((prevState,props)=>{
      if(this.state.incorrect+this.state.correct==8){
        return {res:res+1}
      }
      
      
    })
    
 } 
  render(){
   return (<center>
      <div>
       <div className="row">
         <div className="col-sm-8">
           <Question  name={this.state.ques[this.state.count]} clickHandler={this.clickHandler} count={this.state.count}  />
        <Options id={0} name={this.state.ops[this.state.count][0]} clickHandler={this.clickHandler} count={this.state.count} />
        <Options id={1} name={this.state.ops[this.state.count][1]} clickHandler={this.clickHandler} count={this.state.count} />
       <Options id={2} name={this.state.ops[this.state.count][2]} clickHandler={this.clickHandler} count={this.state.count} />
       <Options id={3} name={this.state.ops[this.state.count][3]} clickHandler={this.clickHandler} count={this.state.count} />
          </div>
         <div className="col-sm-4">
           <Result name="Correct" value={this.state.correct}/>
         <Result name="InCorrect" value={this.state.incorrect}/>
          </div></div>
        <Restart name="Restart" restart={this.restartHandler}/>
      </div></center>
   )
  }
}

ReactDOM.render(
<App />,
  document.getElementById("root")
)